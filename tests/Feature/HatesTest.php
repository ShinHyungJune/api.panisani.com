<?php

namespace Tests\Feature;

use App\Models\Comment;
use App\Models\Hate;
use App\Models\Like;
use App\Models\Post;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class HatesTest extends TestCase
{
    use RefreshDatabase;

    protected $user;
    protected $other;
    protected $post;
    protected $comment;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::factory()->create();
        $this->other = User::factory()->create();
        $this->post = Post::factory()->create();
        $this->comment = Comment::factory()->create();

        $this->actingAs($this->user);

        $this->form = [
            "comment_id" => $this->comment->id
        ];
    }

    /** @test */
    public function 싫어요를_생성하면_댓글의_싫어요수가_상승한다()
    {
        $this->post("/api/hates", $this->form);

        $comment = Comment::find($this->comment->id);

        $this->assertCount(1, Hate::get());
        $this->assertEquals(1, $comment->count_hate);

    }

    /** @test */
    public function 싫어요를_생성하면_게시글의_싫어요수가_상승한다()
    {
        $this->post("/api/hates", $this->form);

        $post = Post::find($this->post->id);

        $this->assertCount(1, Hate::get());
        $this->assertEquals(1, $post->count_hate);
    }

    /** @test */
    public function 중복싫어요를_할_수_없다()
    {
        $this->post("/api/hates", $this->form);

        $post = Post::find($this->post->id);

        $this->assertCount(1, Hate::get());
        $this->assertEquals(1, $post->count_hate);

        $this->post("/api/hates", $this->form);

        $post = Post::find($this->post->id);

        $this->assertCount(0, Hate::get());
        $this->assertEquals(0, $post->count_hate);
    }
}
