<?php

namespace Tests\Feature;

use App\Models\Board;
use App\Models\Post;
use App\Models\TempPost;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class TempPostsTest extends TestCase
{
    use RefreshDatabase;

    protected $user;
    protected $other;
    protected $board;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::factory()->create();
        $this->other = User::factory()->create();
        $this->board = Board::factory()->create();

        $this->actingAs($this->user);

        $this->form = [
            "title" => "테스트",
            "description" => "내용입니다",
        ];
    }

    /** @test */
    public function 사용자는_임시저장게시글목록을_조회할_수_있다()
    {
        $tempPosts = TempPost::factory()->count(6)->create([
            "user_id" => $this->user->id
        ]);

        $items = $this->json("get", "/api/tempPosts", [

        ])->decodeResponseJson()["data"];

        $this->assertCount(count($tempPosts), $items);
    }

    /** @test */
    public function 사용자는_임시저장게시글을_생성할_수_있다()
    {
        $this->post("/api/tempPosts", $this->form)->decodeResponseJson()["data"];

        $this->assertCount(1, TempPost::get());
    }

    /** @test */
    public function 사용자는_자신의_임시저장게시글을_삭제할_수_있다()
    {
        $tempPost = TempPost::factory()->create([
            "user_id" => $this->user->id
        ]);

        $this->delete("/api/tempPosts/".$tempPost->id);

        $this->assertCount(0, TempPost::get());
    }
}
